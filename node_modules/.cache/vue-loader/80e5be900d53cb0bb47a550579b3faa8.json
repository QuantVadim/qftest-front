{"remainingRequest":"E:\\vue-projects\\QFTest\\qftest-front\\node_modules\\vue-loader-v16\\dist\\index.js??ref--0-1!E:\\vue-projects\\QFTest\\qftest-front\\src\\views\\pages\\Groups.vue?vue&type=style&index=0&id=410c7839&lang=css","dependencies":[{"path":"E:\\vue-projects\\QFTest\\qftest-front\\src\\views\\pages\\Groups.vue","mtime":1647388266173},{"path":"E:\\vue-projects\\QFTest\\qftest-front\\node_modules\\css-loader\\dist\\cjs.js","mtime":1647388208165},{"path":"E:\\vue-projects\\QFTest\\qftest-front\\node_modules\\vue-loader-v16\\dist\\stylePostLoader.js","mtime":1647388262306},{"path":"E:\\vue-projects\\QFTest\\qftest-front\\node_modules\\postcss-loader\\src\\index.js","mtime":1647388229687},{"path":"E:\\vue-projects\\QFTest\\qftest-front\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1647388190513},{"path":"E:\\vue-projects\\QFTest\\qftest-front\\node_modules\\vue-loader-v16\\dist\\index.js","mtime":1647388262278}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:DQoNCi5tb2RhbC1oZWFkZXIgew0KICBtYXJnaW46IDNweDsNCn0NCg=="},{"version":3,"sources":["E:\\vue-projects\\QFTest\\qftest-front\\src\\views\\pages\\Groups.vue"],"names":[],"mappings":";;AAiJA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;EACZ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;AACb","file":"E:/vue-projects/QFTest/qftest-front/src/views/pages/Groups.vue","sourceRoot":"","sourcesContent":["<template>\r\n  <div>\r\n      <!-- Создание группы -->\r\n      <it-modal v-model=\"isWindowCreateGroup\">\r\n        <template #header\r\n          ><h3 class=\"modal-header\">Создание группы</h3></template\r\n        >\r\n        <template #body>\r\n          <it-input\r\n            v-model=\"newGroup.name\"\r\n            placeholder=\"Название группы\"\r\n          /><br />\r\n          <it-textarea\r\n            v-model=\"newGroup.description\"\r\n            placeholder=\"Описание группы\"\r\n          />\r\n        </template>\r\n        <template #actions>\r\n          <it-button @click=\"isWindowCreateGroup = false\">Отмена</it-button>\r\n          <it-button @click=\"CreateGroup\" type=\"primary\">Создать</it-button>\r\n        </template>\r\n      </it-modal>\r\n      <!-- /Создание группы -->\r\n      <!-- Вступление в группу -->\r\n      <it-modal v-model=\"isWindowJoinGroup\">\r\n        <template #header\r\n          ><h3 class=\"modal-header\">Вступить в группу</h3></template\r\n        >\r\n        <template #body>\r\n          <it-input v-model=\"joinCode\" placeholder=\"Код вступления\" /><br />\r\n        </template>\r\n        <template #actions>\r\n          <it-button @click=\"isWindowJoinGroup = false\">Отмена</it-button>\r\n          <it-button :loading=\"isJoinLoading\" @click=\"JoinGroup\" type=\"primary\">Вступить</it-button>\r\n        </template>\r\n      </it-modal>\r\n      <!-- /Вступление в группу -->\r\n    <block>\r\n      <h3>Группы:</h3>\r\n      <it-button-group>\r\n      <it-button icon=\"add\" @click=\"isWindowCreateGroup = true\">Создать группу</it-button>\r\n      <it-button icon=\"login\" @click=\"isWindowJoinGroup = true\">Вступить в группу</it-button>\r\n      </it-button-group>\r\n      <br>\r\n      <it-toggle v-model=\"tabGroup\" :options=\"['В составе', 'Управляемые']\" />\r\n        <br>\r\n        <GroupsList :key=\"tabGroup\" :tab=\"tabGroup\" />\r\n        <!-- <GroupCard :data=\"item\" />\r\n        <Divider /> -->\r\n    </block>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport GroupsList from \"../../components/Lists/GroupsList.vue\";\r\n\r\n\r\nexport default {\r\n  components: {\r\n    GroupsList,\r\n  },\r\n  data() {\r\n    return {\r\n      items: [],\r\n      tabGroup: 'В составе',\r\n      isWindowCreateGroup: false,\r\n      isWindowJoinGroup: false,\r\n      isJoinLoading: false,\r\n      joinCode: \"\",\r\n      newGroup: {\r\n        name: \"\",\r\n        description: \"\",\r\n      },\r\n    };\r\n  },\r\n  activated(){\r\n    this.$emit('activated');\r\n  },\r\n  methods: {\r\n    SelectedImage(itm){\r\n      console.log(itm);\r\n    },\r\n    CreateGroup() {\r\n      if (this.newGroup.name.trim().length > 1) {\r\n        let obj = {\r\n          q: \"create_group\",\r\n          me: this.$store.state.ME.data,\r\n          name: this.newGroup.name,\r\n          description: this.newGroup.description,\r\n        };\r\n        this.axios.post(this.apiurl, obj).then((itm) => {\r\n          console.log(itm.data);\r\n          if (itm.data?.data) {\r\n            this.$router.push(`/group/${itm.data.data}`);\r\n            this.isWindowCreateGroup = false;\r\n            this.newGroup.name = \"\";\r\n            this.newGroup.description = \"\";\r\n          }else{\r\n            this.$error(\"Ошибка создания группы\", itm.data?.error ?? \"Неизвестная ошибка\");\r\n          }\r\n        }).catch(()=>{\r\n          this.$error(\"Ошибка создания группы\", \"Ошибка с соединением\");\r\n        })\r\n      }\r\n    },\r\n\r\n    JoinGroup() {\r\n      if(this.isJoinLoading) return;\r\n      this.isJoinLoading = true;\r\n      let obj = {\r\n        q: \"join_group\",\r\n        me: this.$store.state.ME.data,\r\n        join_code: this.joinCode,\r\n      };\r\n      this.axios.post(this.apiurl, obj).then((itm) => {\r\n        this.isJoinLoading = false;\r\n        this.joinCode = \"\";\r\n        console.log(itm.data);\r\n        if (itm.data?.data) {\r\n          this.isWindowJoinGroup = false;\r\n          switch (itm.data.data) {\r\n            case 'ok':\r\n              this.$Notification.success({\r\n            title: itm.data?.message,\r\n            placement: 'bottom-right',\r\n            text: \"Ожидайте, пока куратор примит вашу заявку\",\r\n          });\r\n              break;\r\n            case 'ok2':\r\n              this.$Notification.warning({\r\n            title: itm.data?.message,\r\n            placement: 'bottom-right',\r\n           \r\n          });\r\n              break;\r\n          }\r\n        }\r\n      });\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style>\r\n\r\n.modal-header {\r\n  margin: 3px;\r\n}\r\n</style>"]}]}