{"remainingRequest":"D:\\vue-projects\\rutest\\node_modules\\vue-loader-v16\\dist\\index.js??ref--0-1!D:\\vue-projects\\rutest\\src\\views\\pages\\Home.vue?vue&type=template&id=62022504","dependencies":[{"path":"D:\\vue-projects\\rutest\\src\\views\\pages\\Home.vue","mtime":1641495264540},{"path":"D:\\vue-projects\\rutest\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\vue-projects\\rutest\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"D:\\vue-projects\\rutest\\node_modules\\vue-loader-v16\\dist\\templateLoader.js","mtime":1616796459000},{"path":"D:\\vue-projects\\rutest\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\vue-projects\\rutest\\node_modules\\vue-loader-v16\\dist\\index.js","mtime":1616796459000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CiAgPGRpdiBjbGFzcz0iaG9tZSI+CiAgICA8YmxvY2s+CiAgICAgIDxoMz7Qk9C70LDQstC90LDRjzwvaDM+CgogICAgICA8aXQtYnV0dG9uCiAgICAgIGNsYXNzPSJidG4tdXBkYXRlIgogICAgICBpY29uPSJ1cGRhdGUiCiAgICAgIDpjbGFzcz0ieyAnb3BhY2l0eS1ub25lJzogaXNMb2FkaW5nIH0iCiAgICAgIEBjbGljaz0idXBkYXRlTGlzdCIKICAgICAgdGV4dAogICAgICA+0J7QsdC90L7QstC40YLRjDwvaXQtYnV0dG9uCiAgICA+CiAgICA8ZGl2IHYtZm9yPSIoaXRlbSwgaW5kZXgpIGluIGl0ZW1zIiA6a2V5PSJpbmRleCI+CiAgICAgIDxHVGVzdCA6ZGF0YT0iaXRlbSIgLz4KICAgICAgPERpdmlkZXIgLz4KICAgIDwvZGl2PgogICAgPGRpdgogICAgICB2LWlmPSIhaXNMb2FkaW5nICYmICFpc0J1dHRvbkxvYWQgJiYgaXRlbXMubGVuZ3RoID09IDAiCiAgICAgIGNsYXNzPSJjZW50ZXIgZ3JheSIKICAgID4KICAgICAg0JfQtNC10YHRjCDQvdC40YfQtdCz0L4g0L3QtdGCCiAgICA8L2Rpdj4KICAgIDxpdC1idXR0b24gQGNsaWNrPSJMb2FkIiA6bG9hZGluZz0iaXNMb2FkaW5nIiB2LWlmPSJpc0J1dHRvbkxvYWQiIGJsb2NrCiAgICAgID7QldGJ0LU8L2l0LWJ1dHRvbj4KICAgIDwvYmxvY2s+CiAgICAKICA8L2Rpdj4K"},{"version":3,"sources":["D:\\vue-projects\\rutest\\src\\views\\pages\\Home.vue"],"names":[],"mappings":"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","file":"D:/vue-projects/rutest/src/views/pages/Home.vue","sourceRoot":"","sourcesContent":["<template>\n  <div class=\"home\">\n    <block>\n      <h3>Главная</h3>\n\n      <it-button\n      class=\"btn-update\"\n      icon=\"update\"\n      :class=\"{ 'opacity-none': isLoading }\"\n      @click=\"updateList\"\n      text\n      >Обновить</it-button\n    >\n    <div v-for=\"(item, index) in items\" :key=\"index\">\n      <GTest :data=\"item\" />\n      <Divider />\n    </div>\n    <div\n      v-if=\"!isLoading && !isButtonLoad && items.length == 0\"\n      class=\"center gray\"\n    >\n      Здесь ничего нет\n    </div>\n    <it-button @click=\"Load\" :loading=\"isLoading\" v-if=\"isButtonLoad\" block\n      >Еще</it-button>\n    </block>\n    \n  </div>\n</template>\n\n<script>\nimport GTest from \"../../components/Items/GTest.vue\";\nimport Divider from \"primevue/divider\";\n\nexport default {\n  name: 'Home',\n  components: {\n    GTest,\n    Divider,\n  },\n  props: [\"data\"],\n  data() {\n    return {\n      items: [],\n      isLoading: false,\n      isButtonLoad: true,\n    };\n  },\n  activated(){\n    this.$emit('activated');\n  },\n  mounted() {\n    if (this?.data) {\n      this.items = this.data;\n      if (this.items.length <= 30) {\n        this.isButtonLoad = false;\n      }\n    } else {\n      setTimeout(() => {\n        this.Load();\n      }, 0);\n    }\n  },\n  methods: {\n\n    updateList() {\n      this.isButtonLoad = true;\n      this.items = [];\n      this.Load();\n    },\n    async Load() {\n      if (this.isLoading) return false;\n      this.isLoading = true;\n      let obj = {\n        q: \"get_all_groups_tests\",\n        me: this.$store.state.ME.data,\n        desc: true,\n        count: 30,\n      };\n      if (this.items.length > 0)\n        obj.point = this.items[this.items.length - 1].gt_id;\n\n      this.axios.post(this.apiurl, obj).then((itm) => {\n        if (itm.data?.data) {\n          if (itm.data.data.length > 0) {\n            let leng = itm.data?.data.length;\n            for (let i = 0; i < leng; i++) {\n              this.items.push(itm.data?.data[i]);\n            }\n            if (leng < obj.count) this.isButtonLoad = false;\n          } else {\n            this.isButtonLoad = false;\n          }\n          this.$emit(\"cash\", this.items);\n          console.log(this.items);\n        }\n        this.isLoading = false;\n      });\n    },\n  },\n};\n</script>\n<style>\n.btn-update {\n    color: gray !important;\n    padding-left: 3px !important;\n    padding-right: 3px !important;\n}\n\n</style>"]}]}