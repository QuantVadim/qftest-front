{"remainingRequest":"E:\\vue-projects\\QFTest\\qftest-front\\node_modules\\vue-loader-v16\\dist\\index.js??ref--0-1!E:\\vue-projects\\QFTest\\qftest-front\\src\\views\\pages\\Home.vue?vue&type=style&index=0&id=62022504&lang=css","dependencies":[{"path":"E:\\vue-projects\\QFTest\\qftest-front\\src\\views\\pages\\Home.vue","mtime":1647388266175},{"path":"E:\\vue-projects\\QFTest\\qftest-front\\node_modules\\css-loader\\dist\\cjs.js","mtime":1647388208165},{"path":"E:\\vue-projects\\QFTest\\qftest-front\\node_modules\\vue-loader-v16\\dist\\stylePostLoader.js","mtime":1647388262306},{"path":"E:\\vue-projects\\QFTest\\qftest-front\\node_modules\\postcss-loader\\src\\index.js","mtime":1647388229687},{"path":"E:\\vue-projects\\QFTest\\qftest-front\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1647388190513},{"path":"E:\\vue-projects\\QFTest\\qftest-front\\node_modules\\vue-loader-v16\\dist\\index.js","mtime":1647388262278}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:DQouYnRuLXVwZGF0ZSB7DQogICAgY29sb3I6IGdyYXkgIWltcG9ydGFudDsNCiAgICBwYWRkaW5nLWxlZnQ6IDNweCAhaW1wb3J0YW50Ow0KICAgIHBhZGRpbmctcmlnaHQ6IDNweCAhaW1wb3J0YW50Ow0KfQ0KDQo="},{"version":3,"sources":["E:\\vue-projects\\QFTest\\qftest-front\\src\\views\\pages\\Home.vue"],"names":[],"mappings":";AAuGA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;IACR,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACtB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IAC5B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjC","file":"E:/vue-projects/QFTest/qftest-front/src/views/pages/Home.vue","sourceRoot":"","sourcesContent":["<template>\r\n  <div class=\"home\">\r\n    <block>\r\n      <h3>Главная</h3>\r\n\r\n      <it-button\r\n      class=\"btn-update\"\r\n      icon=\"update\"\r\n      :class=\"{ 'opacity-none': isLoading }\"\r\n      @click=\"updateList\"\r\n      text\r\n      >Обновить</it-button\r\n    >\r\n    <div v-for=\"(item, index) in items\" :key=\"index\">\r\n      <GTest :data=\"item\" />\r\n      <Divider />\r\n    </div>\r\n    <div\r\n      v-if=\"!isLoading && !isButtonLoad && items.length == 0\"\r\n      class=\"center gray\"\r\n    >\r\n      Здесь ничего нет\r\n    </div>\r\n    <it-button @click=\"Load\" :loading=\"isLoading\" v-if=\"isButtonLoad\" block\r\n      >Еще</it-button>\r\n    </block>\r\n    \r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport GTest from \"../../components/Items/GTest.vue\";\r\nimport Divider from \"primevue/divider\";\r\n\r\nexport default {\r\n  name: 'Home',\r\n  components: {\r\n    GTest,\r\n    Divider,\r\n  },\r\n  props: [\"data\"],\r\n  data() {\r\n    return {\r\n      items: [],\r\n      isLoading: false,\r\n      isButtonLoad: true,\r\n    };\r\n  },\r\n  activated(){\r\n    this.$emit('activated');\r\n  },\r\n  mounted() {\r\n    if (this?.data) {\r\n      this.items = this.data;\r\n      if (this.items.length <= 30) {\r\n        this.isButtonLoad = false;\r\n      }\r\n    } else {\r\n      setTimeout(() => {\r\n        this.Load();\r\n      }, 0);\r\n    }\r\n  },\r\n  methods: {\r\n\r\n    updateList() {\r\n      this.isButtonLoad = true;\r\n      this.items = [];\r\n      this.Load();\r\n    },\r\n    async Load() {\r\n      if (this.isLoading) return false;\r\n      this.isLoading = true;\r\n      let obj = {\r\n        q: \"get_all_groups_tests\",\r\n        me: this.$store.state.ME.data,\r\n        desc: true,\r\n        count: 30,\r\n      };\r\n      if (this.items.length > 0)\r\n        obj.point = this.items[this.items.length - 1].gt_id;\r\n\r\n      this.axios.post(this.apiurl, obj).then((itm) => {\r\n        if (itm.data?.data) {\r\n          if (itm.data.data.length > 0) {\r\n            let leng = itm.data?.data.length;\r\n            for (let i = 0; i < leng; i++) {\r\n              this.items.push(itm.data?.data[i]);\r\n            }\r\n            if (leng < obj.count) this.isButtonLoad = false;\r\n          } else {\r\n            this.isButtonLoad = false;\r\n          }\r\n          this.$emit(\"cash\", this.items);\r\n          console.log(this.items);\r\n        }\r\n        this.isLoading = false;\r\n      });\r\n    },\r\n  },\r\n};\r\n</script>\r\n<style>\r\n.btn-update {\r\n    color: gray !important;\r\n    padding-left: 3px !important;\r\n    padding-right: 3px !important;\r\n}\r\n\r\n</style>"]}]}