{"remainingRequest":"D:\\vue-projects\\rutest\\node_modules\\vue-loader-v16\\dist\\index.js??ref--0-1!D:\\vue-projects\\rutest\\src\\views\\pages\\Groups.vue?vue&type=style&index=0&id=b3beefcc&lang=css","dependencies":[{"path":"D:\\vue-projects\\rutest\\src\\views\\pages\\Groups.vue","mtime":1624024734030},{"path":"D:\\vue-projects\\rutest\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\vue-projects\\rutest\\node_modules\\vue-loader-v16\\dist\\stylePostLoader.js","mtime":1616796459000},{"path":"D:\\vue-projects\\rutest\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"D:\\vue-projects\\rutest\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\vue-projects\\rutest\\node_modules\\vue-loader-v16\\dist\\index.js","mtime":1616796459000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ci5tb2RhbC1oZWFkZXIgewogIG1hcmdpbjogM3B4Owp9Cg=="},{"version":3,"sources":["D:\\vue-projects\\rutest\\src\\views\\pages\\Groups.vue"],"names":[],"mappings":";AAwKA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;EACZ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;AACb","file":"D:/vue-projects/rutest/src/views/pages/Groups.vue","sourceRoot":"","sourcesContent":["<template>\n  <div>\n    <Toast position=\"top-right\" />\n    <block>\n      Группы<br />\n      <!-- Создание группы -->\n      <it-button @click=\"isWindowCreateGroup = true\">Создать группу</it-button>\n      <it-modal v-model=\"isWindowCreateGroup\">\n        <template #header\n          ><h3 class=\"modal-header\">Создание группы</h3></template\n        >\n        <template #body>\n          <it-input\n            v-model=\"newGroup.name\"\n            placeholder=\"Название группы\"\n          /><br />\n          <it-textarea\n            v-model=\"newGroup.description\"\n            placeholder=\"Описание группы\"\n          />\n        </template>\n        <template #actions>\n          <it-button @click=\"isWindowCreateGroup = false\">Отмена</it-button>\n          <it-button @click=\"CreateGroup\" type=\"primary\">Создать</it-button>\n        </template>\n      </it-modal>\n      <!-- Вступление в группу -->\n      <it-button @click=\"isWindowJoinGroup = true\">Вступить в группу</it-button>\n      <it-modal v-model=\"isWindowJoinGroup\">\n        <template #header\n          ><h3 class=\"modal-header\">Вступить в группу</h3></template\n        >\n        <template #body>\n          <it-input v-model=\"joinCode\" placeholder=\"Код вступления\" /><br />\n        </template>\n        <template #actions>\n          <it-button @click=\"isWindowJoinGroup = false\">Отмена</it-button>\n          <it-button :loading=\"isJoinLoading\" @click=\"JoinGroup\" type=\"primary\">Вступить</it-button>\n        </template>\n      </it-modal>\n    </block>\n    <block>\n      <div v-for=\"(item, index) in items\" :key=\"index\">\n        <GroupCard :data=\"item\" />\n        <Divider />\n      </div>\n      <it-button @click=\"Load\" :loading=\"isLoading\" v-if=\"isButtonLoad\" block\n        >Еще</it-button\n      >\n    </block>\n  </div>\n</template>\n\n<script>\nimport Divider from \"primevue/divider\";\nimport GroupCard from \"../../components/Items/Group\";\nimport Toast from \"primevue/toast\";\n\nexport default {\n  components: {\n    Divider,\n    GroupCard,\n    Toast,\n  },\n  data() {\n    return {\n      items: [],\n      isWindowCreateGroup: false,\n      isWindowJoinGroup: false,\n      isLoading: false,\n      isJoinLoading: false,\n      isButtonLoad: true,\n      joinCode: \"\",\n      newGroup: {\n        name: \"\",\n        description: \"\",\n      },\n    };\n  },\n  methods: {\n    async Load() {\n      if (this.isLoading) return false;\n      this.isLoading = true;\n      let obj = {\n        q: \"get_my_groups\",\n        me: this.$store.state.ME.data,\n        desc: true,\n        count: 20,\n      };\n      if (this.items.length > 0)\n        obj.point = this.items[this.items.length - 1].test_id;\n\n      this.axios.post(window.c.API, obj).then((itm) => {\n        if (itm.data?.data) {\n          if (itm.data.data.length > 0) {\n            let leng = itm.data?.data.length;\n            for (let i = 0; i < leng; i++) {\n              this.items.push(itm.data?.data[i]);\n            }\n            if (leng < obj.count) this.isButtonLoad = false;\n          } else {\n            this.isButtonLoad = false;\n          }\n        }\n        this.isLoading = false;\n      });\n    },\n\n    CreateGroup() {\n      if (this.newGroup.name.trim().length > 1) {\n        let obj = {\n          q: \"create_group\",\n          me: this.$store.state.ME.data,\n          name: this.newGroup.name,\n          description: this.newGroup.description,\n        };\n        this.axios.post(window.c.API, obj).then((itm) => {\n          console.log(itm.data);\n          if (itm.data?.data) {\n            this.$router.push(`/group/${itm.data.data}`);\n          }\n        });\n      }\n    },\n\n    JoinGroup() {\n      if(this.isJoinLoading) return;\n      this.isJoinLoading = true;\n      let obj = {\n        q: \"join_group\",\n        me: this.$store.state.ME.data,\n        join_code: this.joinCode,\n      };\n      this.axios.post(window.c.API, obj).then((itm) => {\n        this.isJoinLoading = false;\n        this.joinCode = \"\";\n        console.log(itm.data);\n        if (itm.data?.data) {\n          this.isWindowJoinGroup = false;\n          switch (itm.data.data) {\n            case 'ok':\n              this.$Notification.success({\n            title: itm.data?.message,\n            placement: 'bottom-right',\n            text: \"Ожидайте, пока куратор примит вашу заявку\",\n          });\n              break;\n            case 'ok2':\n              this.$Notification.warning({\n            title: itm.data?.message,\n            placement: 'bottom-right',\n           \n          });\n              break;\n          }\n        }\n      });\n    },\n  },\n  mounted() {\n    setTimeout(() => {\n      this.Load();\n    }, 0);\n  },\n};\n</script>\n\n<style>\n.modal-header {\n  margin: 3px;\n}\n</style>"]}]}